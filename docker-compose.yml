version: '3.5'
services:
  traefik:
    image: traefik
    restart: always
    env_file:
      - .env
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.insecure
      - --certificatesresolvers.le.acme.email=detactive.app@gmail.com
      - --certificatesresolvers.le.acme.storage=/etc/ssl/certs/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.my-app.rule=Host(`test-api.detactive.de`)
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.entrypoints=websecure
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/ssl/certs:/etc/ssl/certs
      - /etc/traefik/traefik.log:/etc/traefik/traefik.log

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./api/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal

  api:
    build: api
    restart: always
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.api.rule=Host(`test-api.detactive.de`) && PathPrefix(`/api`)
      - traefik.http.services.api.loadbalancer.server.port=80
      - traefik.http.routers.api.tls.certresolver=le
      - traefik.http.routers.api.entrypoints=websecure
    depends_on:
      - db
    networks:
      - web
      - internal

networks:
  web:
    external: true
  internal:
    external: false
